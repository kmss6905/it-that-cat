name: backend-deploy-production

on:
  push:
    branches:
      - main

jobs:
  set-env-vars:
    runs-on: ubuntu-latest
    outputs:
      ecr-repository: ${{ steps.set-envs.outputs.ecr-repository }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
      - name: Set Production Docker Repository Name
        id: set-envs
        if: github.ref_name == 'main'
        run: |
          ECR_REPOSITORY=$(aws ssm get-parameter --name /prod/front/image-name --query 'Parameter.Value' --output text)
          echo "ecr-repository=$ECR_REPOSITORY" >> "$GITHUB_OUTPUT"

  docker-build-and-push:
    runs-on: ubuntu-latest
    needs: set-env-vars
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ needs.set-env-vars.outputs.ecr-repository }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          aws ssm get-parameter --name /prod/front --query 'Parameter.Value' --output text > .env
          docker buildx build --platform=linux/amd64 -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest -f ./dockerfiles/prod.Dockerfile . 
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

  deploy:
    runs-on: ubuntu-latest
    needs: docker-build-and-push
    if: github.ref_name == 'main'
    steps:
      - name: Deploy to Production Environment
        env:
          ECR_REPOSITORY: ${{ needs.set-env-vars.outputs.ecr-repository }}
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.PROD_TARGET_HOST }}
          username: ${{ secrets.PROD_SSH_USERNAME }}
          key: ${{ secrets.PROD_SSH_PRIVATE_KEY }}
          port: ${{ secrets.PROD_SSH_PORT }}
          script: |
            sh awslogin.sh
            cd application
            docker compose pull && docker compose up -d
